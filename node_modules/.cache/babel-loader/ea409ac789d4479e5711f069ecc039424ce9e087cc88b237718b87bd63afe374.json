{"ast":null,"code":"import _objectSpread from\"/Users/peterlelkes/Desktop/biva-patienter/patient-list/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from\"react\";import SelectBakavd from\"../Formular/SelectBakavd\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";// import {faPencilAlt, faTrash} from \"@fortawesome/free-solid-svg-icons\";\nimport{faTrash}from\"@fortawesome/free-solid-svg-icons\";import SelectVardTid from\"../Formular/SelectVardTid\";import AntaletInneliggandeDagar from\"../Datum/AntaletInneliggandeDagar\";import Button from\"../UI/Button\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function InneliggandePatienter(_ref){var patienter=_ref.patienter,redigeradPatient=_ref.redigeradPatient,setRedigeradPatient=_ref.setRedigeradPatient,sparaRedigering=_ref.sparaRedigering,startRedigering=_ref.startRedigering,deletePatient=_ref.deletePatient,valdAvd=_ref.valdAvd,setValdAvd=_ref.setValdAvd,inDatum=_ref.inDatum;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Plats\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Datum\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Initialer\"}),/*#__PURE__*/_jsx(\"th\",{children:\"FVK\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Bakavdelning\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Ber\\xE4knad v\\xE5rdtid\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Dagar v\\xE5rdad\"}),/*#__PURE__*/_jsx(\"th\",{})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:patienter.slice()//skapar en kopia\n.sort(function(a,b){var platsA=a.plats.toString();var platsB=b.plats.toString();// Dela upp platserna i deras delar (till exempel 113:1 blir [113, 1])\nvar partsA=platsA.split(\":\").map(function(part){return isNaN(part)?part:parseInt(part);});var partsB=platsB.split(\":\").map(function(part){return isNaN(part)?part:parseInt(part);});// Jämför delarna en efter en\nfor(var i=0;i<Math.min(partsA.length,partsB.length);i++){if(partsA[i]<partsB[i]){return-1;}if(partsA[i]>partsB[i]){return 1;}}// Om alla delar är lika, använd standardnummerordning\nif(partsA.length<partsB.length){return-1;}if(partsA.length>partsB.length){return 1;}return 0;}).map(function(patient){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:redigeradPatient&&redigeradPatient.id===patient.id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:redigeradPatient.plats,onChange:function onChange(e){return setRedigeradPatient(_objectSpread(_objectSpread({},redigeradPatient),{},{plats:e.target.value}));}}):patient.plats}),/*#__PURE__*/_jsx(\"td\",{children:patient.datum}),/*#__PURE__*/_jsx(\"td\",{children:patient.initialer}),/*#__PURE__*/_jsx(\"td\",{children:redigeradPatient&&redigeradPatient.id===patient.id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:redigeradPatient.fvk,onChange:function onChange(e){return setRedigeradPatient(_objectSpread(_objectSpread({},redigeradPatient),{},{fvk:e.target.value.toUpperCase()}));}}):patient.fvk}),/*#__PURE__*/_jsx(\"td\",{children:redigeradPatient&&redigeradPatient.id===patient.id?/*#__PURE__*/_jsx(SelectBakavd,{setValdAvd:function setValdAvd(value){return setRedigeradPatient(_objectSpread(_objectSpread({},redigeradPatient),{},{avd:value}));},inAvd:redigeradPatient.avd}):patient.avd}),/*#__PURE__*/_jsx(\"td\",{children:redigeradPatient&&redigeradPatient.id===patient.id?/*#__PURE__*/_jsx(SelectVardTid,{setValdDygn:function setValdDygn(value){return setRedigeradPatient(_objectSpread(_objectSpread({},redigeradPatient),{},{dygn:value}));},valdDygn:redigeradPatient.dygn}):patient.dygn}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(AntaletInneliggandeDagar,{inDatum:patient.datum})}),/*#__PURE__*/_jsx(\"td\",{children:redigeradPatient&&redigeradPatient.id===patient.id?/*#__PURE__*/_jsx(Button,{onClick:sparaRedigering,children:\"Spara\"}):/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return startRedigering(patient);},children:\"Redigera\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{style:{color:\"red\",margin:\"3px\"},children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faTrash,size:\"lg\",onClick:function onClick(){return deletePatient(patient.id);}})})})]},patient.id);})})]})});}export default InneliggandePatienter;","map":{"version":3,"names":["React","SelectBakavd","FontAwesomeIcon","faTrash","SelectVardTid","AntaletInneliggandeDagar","Button","jsx","_jsx","jsxs","_jsxs","InneliggandePatienter","_ref","patienter","redigeradPatient","setRedigeradPatient","sparaRedigering","startRedigering","deletePatient","valdAvd","setValdAvd","inDatum","children","className","slice","sort","a","b","platsA","plats","toString","platsB","partsA","split","map","part","isNaN","parseInt","partsB","i","Math","min","length","patient","id","type","value","onChange","e","_objectSpread","target","datum","initialer","fvk","toUpperCase","avd","inAvd","setValdDygn","dygn","valdDygn","onClick","style","color","margin","icon","size"],"sources":["/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/Tabell/PatienterTabell.jsx"],"sourcesContent":["import React from \"react\";\nimport SelectBakavd from \"../Formular/SelectBakavd\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n// import {faPencilAlt, faTrash} from \"@fortawesome/free-solid-svg-icons\";\nimport {faTrash} from \"@fortawesome/free-solid-svg-icons\";\nimport SelectVardTid from \"../Formular/SelectVardTid\";\nimport AntaletInneliggandeDagar from \"../Datum/AntaletInneliggandeDagar\";\nimport Button from \"../UI/Button\";\n\nfunction InneliggandePatienter({\n  patienter,\n  redigeradPatient,\n  setRedigeradPatient,\n  sparaRedigering,\n  startRedigering,\n  deletePatient,\n  valdAvd,\n  setValdAvd,\n  inDatum,\n}) {\n  return (\n    <div>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Plats</th>\n            <th>Datum</th>\n            <th>Initialer</th>\n            <th>FVK</th>\n            <th>Bakavdelning</th>\n            <th>Beräknad vårdtid</th>\n            <th>Dagar vårdad</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {patienter\n            .slice() //skapar en kopia\n            .sort((a, b) => {\n              const platsA = a.plats.toString();\n              const platsB = b.plats.toString();\n\n              // Dela upp platserna i deras delar (till exempel 113:1 blir [113, 1])\n              const partsA = platsA\n                .split(\":\")\n                .map((part) => (isNaN(part) ? part : parseInt(part)));\n              const partsB = platsB\n                .split(\":\")\n                .map((part) => (isNaN(part) ? part : parseInt(part)));\n\n              // Jämför delarna en efter en\n              for (let i = 0; i < Math.min(partsA.length, partsB.length); i++) {\n                if (partsA[i] < partsB[i]) {\n                  return -1;\n                }\n                if (partsA[i] > partsB[i]) {\n                  return 1;\n                }\n              }\n\n              // Om alla delar är lika, använd standardnummerordning\n              if (partsA.length < partsB.length) {\n                return -1;\n              }\n              if (partsA.length > partsB.length) {\n                return 1;\n              }\n\n              return 0;\n            })\n            .map((patient) => (\n              <tr key={patient.id}>\n                <td>\n                  {redigeradPatient && redigeradPatient.id === patient.id ? (\n                    <input\n                      type=\"text\"\n                      value={redigeradPatient.plats}\n                      onChange={(e) =>\n                        setRedigeradPatient({\n                          ...redigeradPatient,\n                          plats: e.target.value,\n                        })\n                      }\n                    />\n                  ) : (\n                    patient.plats\n                  )}\n                </td>\n                <td>{patient.datum}</td>\n                <td>{patient.initialer}</td>\n                <td>\n                  {redigeradPatient && redigeradPatient.id === patient.id ? (\n                    <input\n                      type=\"text\"\n                      value={redigeradPatient.fvk}\n                      onChange={(e) =>\n                        setRedigeradPatient({\n                          ...redigeradPatient,\n                          fvk: e.target.value.toUpperCase(),\n                        })\n                      }\n                    />\n                  ) : (\n                    patient.fvk\n                  )}\n                </td>\n                {/* <td>\n                {redigeradPatient && redigeradPatient.id === patient.id ? (\n                  <SelectBakavd\n                    setInAvd={setRedigeradPatient}\n                    inAvd={redigeradPatient.avd}\n                    onChange={(e) =>\n                      setRedigeradPatient({\n                        ...redigeradPatient,\n                        fvk: e.target.value,\n                      })\n                    }\n                  />\n                ) : (\n                  patient.avd\n                )}\n              </td> */}\n                <td>\n                  {redigeradPatient && redigeradPatient.id === patient.id ? (\n                    <SelectBakavd\n                      setValdAvd={(value) =>\n                        setRedigeradPatient({...redigeradPatient, avd: value})\n                      }\n                      inAvd={redigeradPatient.avd}\n                    />\n                  ) : (\n                    patient.avd\n                  )}\n                </td>\n                <td>\n                  {redigeradPatient && redigeradPatient.id === patient.id ? (\n                    <SelectVardTid\n                      setValdDygn={(value) =>\n                        setRedigeradPatient({...redigeradPatient, dygn: value})\n                      }\n                      valdDygn={redigeradPatient.dygn}\n                    />\n                  ) : (\n                    patient.dygn\n                  )}\n                </td>\n                <td>\n                  <AntaletInneliggandeDagar inDatum={patient.datum} />\n                </td>\n                <td>\n                  {redigeradPatient && redigeradPatient.id === patient.id ? (\n                    <Button onClick={sparaRedigering}>Spara</Button>\n                  ) : (\n                    <Button onClick={() => startRedigering(patient)}>\n                      Redigera\n                    </Button>\n                  )}\n                </td>\n\n                <td>\n                  <span style={{color: \"red\", margin: \"3px\"}}>\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      size=\"lg\"\n                      onClick={() => deletePatient(patient.id)}\n                    />\n                  </span>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default InneliggandePatienter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}