{"ast":null,"code":"var _jsxFileName = \"/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\n\n// import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n// // import {faPencilAlt, faTrash} from \"@fortawesome/free-solid-svg-icons\";\n// import {faTrash} from \"@fortawesome/free-solid-svg-icons\";\nimport InneliggandePatienter from \"./Tabell/InneliggandePatienter\";\nimport NyPatientForm from \"./Formular/NyPatientForm\";\nimport IngaInneliggande from \"./IngaInneliggande\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [patienter, setPatienter] = useState([{\n    id: 12345,\n    plats: \"101\",\n    datum: \"2023-09-30\",\n    fvk: \"LEB\"\n  }, {\n    id: 67890,\n    plats: \"111\",\n    datum: \"2023-10-10\",\n    fvk: \"MD\"\n  }]);\n  //  state för ny patient - start in = input\n  const [inPlats, setInPlats] = useState(\"\");\n  const [inDatum, setInDatum] = useState(\"\");\n  const [inKontakt, setInKontakt] = useState(\"\");\n  const [initialer, setInitialer] = useState(\"\");\n  const [inAvd, setInAvd] = useState(\"\");\n\n  //  state för redigering\n  const [redigeradPatient, setRedigeradPatient] = useState(null);\n\n  //visa formulär\n  const [visaForm, setVisaForm] = useState(false);\n\n  //funktioner som ska vara i appen\n  const uniqueId = () => {\n    return new Date().getTime(); // Ersätt med din egen unika ID-genereringslogik\n  };\n\n  const handleSubmitNypatient = e => {\n    e.preventDefault();\n    const nyPatient = {\n      id: uniqueId(),\n      plats: inPlats,\n      datum: inDatum,\n      fvk: inKontakt,\n      initialer: initialer,\n      avd: inAvd\n    };\n    setPatienter(prevPatienter => [...prevPatienter, nyPatient]);\n    setInPlats(\"\");\n    setInDatum(\"\");\n    setInKontakt(\"\");\n    setInitialer(\"\");\n    setInAvd(\"\");\n    setVisaForm(false);\n  };\n  const startRedigering = patient => {\n    // kopiera patientobjekt\n    setRedigeradPatient({\n      ...patient\n    });\n  };\n  const sparaRedigering = () => {\n    if (redigeradPatient) {\n      setPatienter(prevPatienter => {\n        return prevPatienter.map(patient => {\n          return patient.id === redigeradPatient.id ? redigeradPatient : patient;\n        });\n      });\n      setRedigeradPatient(null);\n    }\n  };\n  const deletePatient = id => {\n    setPatienter(prevPatienter => {\n      return prevPatienter.filter(p => p.id !== id);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), visaForm && /*#__PURE__*/_jsxDEV(NyPatientForm, {\n      handleSubmitNypatient: handleSubmitNypatient,\n      inPlats: inPlats,\n      setInPlats: setInPlats,\n      inKontakt: inKontakt,\n      setInKontakt: setInKontakt,\n      inDatum: inDatum,\n      setInDatum: setInDatum,\n      initialer: initialer,\n      setInitialer: setInitialer,\n      inAvd: inAvd,\n      setInAvd: inAvd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), patienter.length === 0 ? /*#__PURE__*/_jsxDEV(IngaInneliggande, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(InneliggandePatienter, {\n      patienter: patienter,\n      redigeradPatient: redigeradPatient,\n      setRedigeradPatient: setRedigeradPatient,\n      sparaRedigering: sparaRedigering,\n      startRedigering: startRedigering,\n      deletePatient: deletePatient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setVisaForm(true),\n        children: \"Ny patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cyJSDmY787A0wGjeI+dbzWQAMWA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","InneliggandePatienter","NyPatientForm","IngaInneliggande","jsxDEV","_jsxDEV","App","_s","patienter","setPatienter","id","plats","datum","fvk","inPlats","setInPlats","inDatum","setInDatum","inKontakt","setInKontakt","initialer","setInitialer","inAvd","setInAvd","redigeradPatient","setRedigeradPatient","visaForm","setVisaForm","uniqueId","Date","getTime","handleSubmitNypatient","e","preventDefault","nyPatient","avd","prevPatienter","startRedigering","patient","sparaRedigering","map","deletePatient","filter","p","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","_c","$RefreshReg$"],"sources":["/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/App.js"],"sourcesContent":["import {useState} from \"react\";\nimport \"./App.css\";\n\n// import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n// // import {faPencilAlt, faTrash} from \"@fortawesome/free-solid-svg-icons\";\n// import {faTrash} from \"@fortawesome/free-solid-svg-icons\";\nimport InneliggandePatienter from \"./Tabell/InneliggandePatienter\";\nimport NyPatientForm from \"./Formular/NyPatientForm\";\nimport IngaInneliggande from \"./IngaInneliggande\";\n\nfunction App() {\n  const [patienter, setPatienter] = useState([\n    {id: 12345, plats: \"101\", datum: \"2023-09-30\", fvk: \"LEB\"},\n    {id: 67890, plats: \"111\", datum: \"2023-10-10\", fvk: \"MD\"},\n  ]);\n  //  state för ny patient - start in = input\n  const [inPlats, setInPlats] = useState(\"\");\n  const [inDatum, setInDatum] = useState(\"\");\n  const [inKontakt, setInKontakt] = useState(\"\");\n  const [initialer, setInitialer] = useState(\"\");\n  const [inAvd, setInAvd] = useState(\"\");\n\n  //  state för redigering\n  const [redigeradPatient, setRedigeradPatient] = useState(null);\n\n  //visa formulär\n  const [visaForm, setVisaForm] = useState(false);\n\n  //funktioner som ska vara i appen\n  const uniqueId = () => {\n    return new Date().getTime(); // Ersätt med din egen unika ID-genereringslogik\n  };\n\n  const handleSubmitNypatient = (e) => {\n    e.preventDefault();\n    const nyPatient = {\n      id: uniqueId(),\n      plats: inPlats,\n      datum: inDatum,\n      fvk: inKontakt,\n      initialer: initialer,\n      avd: inAvd,\n    };\n    setPatienter((prevPatienter) => [...prevPatienter, nyPatient]);\n    setInPlats(\"\");\n    setInDatum(\"\");\n    setInKontakt(\"\");\n    setInitialer(\"\");\n    setInAvd(\"\");\n    setVisaForm(false);\n  };\n\n  const startRedigering = (patient) => {\n    // kopiera patientobjekt\n    setRedigeradPatient({...patient});\n  };\n\n  const sparaRedigering = () => {\n    if (redigeradPatient) {\n      setPatienter((prevPatienter) => {\n        return prevPatienter.map((patient) => {\n          return patient.id === redigeradPatient.id\n            ? redigeradPatient\n            : patient;\n        });\n      });\n      setRedigeradPatient(null);\n    }\n  };\n\n  const deletePatient = (id) => {\n    setPatienter((prevPatienter) => {\n      return prevPatienter.filter((p) => p.id !== id);\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Teest</h1>\n      <br />\n\n      {visaForm && (\n        <NyPatientForm\n          handleSubmitNypatient={handleSubmitNypatient}\n          inPlats={inPlats}\n          setInPlats={setInPlats}\n          inKontakt={inKontakt}\n          setInKontakt={setInKontakt}\n          inDatum={inDatum}\n          setInDatum={setInDatum}\n          initialer={initialer}\n          setInitialer={setInitialer}\n          inAvd={inAvd}\n          setInAvd={inAvd}\n        />\n      )}\n      {patienter.length === 0 ? (\n        <IngaInneliggande />\n      ) : (\n        <InneliggandePatienter\n          patienter={patienter}\n          redigeradPatient={redigeradPatient}\n          setRedigeradPatient={setRedigeradPatient}\n          sparaRedigering={sparaRedigering}\n          startRedigering={startRedigering}\n          deletePatient={deletePatient}\n        />\n      )}\n      <div>\n        <button onClick={() => setVisaForm(true)}>Ny patient</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}