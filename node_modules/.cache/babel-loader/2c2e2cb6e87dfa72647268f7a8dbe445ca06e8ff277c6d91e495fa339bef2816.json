{"ast":null,"code":"var _jsxFileName = \"/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/Datum/DatumFilter.jsx\",\n  _s = $RefreshSig$();\nimport \"../Formular/Form.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DatumFilter = ({\n  historikInskrivna\n}) => {\n  _s();\n  const [periodStart, setPeriodStart] = useState(\"\");\n  const [periodSlut, setPeriodSlut] = useState(\"\");\n  const [filteredData, setFilteredData] = useState([]);\n  const handleFilter = () => {\n    // Konvertera start- och slutdatum till JavaScript Date-objekt\n    const startDate = new Date(periodStart);\n    const endDate = new Date(periodSlut);\n\n    // Filtrera resultaten och uppdatera filtrerad data i komponentens lokala tillstånd\n    const filtreradDatum = historikInskrivna.filter(patient => {\n      const patientDate = new Date(patient.datum);\n      return patientDate >= startDate && patientDate <= endDate;\n    });\n    setFilteredData(filtreradDatum);\n  };\n  const filtreradDatum = historikInskrivna.filter(patient => {\n    const patientDate = new Date(patient.datum);\n    // Ta bort tidskomponenten för att jämföra enbart datum\n    patientDate.setHours(0, 0, 0, 0);\n    startDate.setHours(0, 0, 0, 0);\n    console.log(\"patientDate:\", patientDate);\n    console.log(\"startDate:\", startDate);\n    console.log(\"endDate:\", endDate);\n    const isWithinRange = patientDate >= startDate && patientDate <= endDate;\n    console.log(\"isWithinRange:\", isWithinRange);\n    return isWithinRange;\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kolumn\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Startdatum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: periodStart,\n          onChange: e => setPeriodStart(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kolumn\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Slutdatum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: periodSlut,\n          onChange: e => setPeriodSlut(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFilter,\n        children: \"Filtrera datum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(DatumFilter, \"bXF2vFPJvY93aTQOOPOlKYSpDVk=\");\n_c = DatumFilter;\nexport default DatumFilter;\nvar _c;\n$RefreshReg$(_c, \"DatumFilter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DatumFilter","historikInskrivna","_s","periodStart","setPeriodStart","periodSlut","setPeriodSlut","filteredData","setFilteredData","handleFilter","startDate","Date","endDate","filtreradDatum","filter","patient","patientDate","datum","setHours","console","log","isWithinRange","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/Datum/DatumFilter.jsx"],"sourcesContent":["import \"../Formular/Form.css\";\nimport React, {useState} from \"react\";\n\nconst DatumFilter = ({historikInskrivna}) => {\n  const [periodStart, setPeriodStart] = useState(\"\");\n  const [periodSlut, setPeriodSlut] = useState(\"\");\n  const [filteredData, setFilteredData] = useState([]);\n\n  const handleFilter = () => {\n    // Konvertera start- och slutdatum till JavaScript Date-objekt\n    const startDate = new Date(periodStart);\n    const endDate = new Date(periodSlut);\n\n    // Filtrera resultaten och uppdatera filtrerad data i komponentens lokala tillstånd\n    const filtreradDatum = historikInskrivna.filter((patient) => {\n      const patientDate = new Date(patient.datum);\n      return patientDate >= startDate && patientDate <= endDate;\n    });\n\n    setFilteredData(filtreradDatum);\n  };\n\n  const filtreradDatum = historikInskrivna.filter((patient) => {\n    const patientDate = new Date(patient.datum);\n    // Ta bort tidskomponenten för att jämföra enbart datum\n    patientDate.setHours(0, 0, 0, 0);\n    startDate.setHours(0, 0, 0, 0);\n\n    console.log(\"patientDate:\", patientDate);\n    console.log(\"startDate:\", startDate);\n    console.log(\"endDate:\", endDate);\n\n    const isWithinRange = patientDate >= startDate && patientDate <= endDate;\n    console.log(\"isWithinRange:\", isWithinRange);\n\n    return isWithinRange;\n  });\n\n  return (\n    <form>\n      <div className=\"form-container\">\n        <div className=\"kolumn\">\n          <label>Startdatum</label>\n          <input\n            type=\"date\"\n            value={periodStart}\n            onChange={(e) => setPeriodStart(e.target.value)}\n          />\n        </div>\n        <div className=\"kolumn\">\n          <label>Slutdatum</label>\n          <input\n            type=\"date\"\n            value={periodSlut}\n            onChange={(e) => setPeriodSlut(e.target.value)}\n          />\n        </div>\n        <button onClick={handleFilter}>Filtrera datum</button>\n      </div>\n    </form>\n  );\n};\n\nexport default DatumFilter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}