{"ast":null,"code":"var _jsxFileName = \"/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/pages/SidaSammanlagdStats.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DatumFilter from \"../Datum/DatumFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SidaSammanlagdStats({\n  onFilter,\n  periodStart,\n  periodSlut,\n  historikInskrivna,\n  antaletDagarMellanDagar\n}) {\n  _s();\n  const [filteredData, setFilteredData] = useState([]);\n  const handleFilter = nyaFiltreradeData => {\n    setFilteredData(nyaFiltreradeData);\n  };\n\n  // Använd filteredData för att utföra beräkningar eller visa information baserat på det.\n  const antalPatienter = filteredData.length;\n  // Räkna antalet patienter med angivet 'dygn'\n  const antalDygn = filteredData.filter(patient => patient.dygn !== \"\").length;\n\n  // Räkna antalet patienter med FVK\n  const antalFVKochDagar = filteredData.filter(patient => {\n    return patient.fvk !== \"\" && antaletDagarMellanDagar(patient.datum, new Date()) > 5;\n  }).length;\n  const totalInskrivna = historikInskrivna.filter(patient => {\n    const patientDatum = new Date(patient.datum);\n    return patientDatum >= new Date(periodStart) && patientDatum <= new Date(periodSlut);\n  }).length;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"totalt inlagda: \", totalInskrivna]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"angivet v\\xE5rdtid: \", antalDygn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tilldelats FVK: \", antalFVKochDagar]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatumFilter, {\n      historikInskrivna: historikInskrivna,\n      onFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SidaSammanlagdStats, \"2RZ5o9kbY2QwW1gHfkb8pHDI1lQ=\");\n_c = SidaSammanlagdStats;\nexport default SidaSammanlagdStats;\nvar _c;\n$RefreshReg$(_c, \"SidaSammanlagdStats\");","map":{"version":3,"names":["React","useState","DatumFilter","jsxDEV","_jsxDEV","Fragment","_Fragment","SidaSammanlagdStats","onFilter","periodStart","periodSlut","historikInskrivna","antaletDagarMellanDagar","_s","filteredData","setFilteredData","handleFilter","nyaFiltreradeData","antalPatienter","length","antalDygn","filter","patient","dygn","antalFVKochDagar","fvk","datum","Date","totalInskrivna","patientDatum","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/pages/SidaSammanlagdStats.jsx"],"sourcesContent":["import React, {useState} from \"react\";\n\nimport DatumFilter from \"../Datum/DatumFilter\";\n\nfunction SidaSammanlagdStats({\n  onFilter,\n  periodStart,\n  periodSlut,\n  historikInskrivna,\n  antaletDagarMellanDagar,\n}) {\n  const [filteredData, setFilteredData] = useState([]);\n\n  const handleFilter = (nyaFiltreradeData) => {\n    setFilteredData(nyaFiltreradeData);\n  };\n\n  // Använd filteredData för att utföra beräkningar eller visa information baserat på det.\n  const antalPatienter = filteredData.length;\n  // Räkna antalet patienter med angivet 'dygn'\n  const antalDygn = filteredData.filter(\n    (patient) => patient.dygn !== \"\"\n  ).length;\n\n  // Räkna antalet patienter med FVK\n  const antalFVKochDagar = filteredData.filter((patient) => {\n    return (\n      patient.fvk !== \"\" &&\n      antaletDagarMellanDagar(patient.datum, new Date()) > 5\n    );\n  }).length;\n\n  const totalInskrivna = historikInskrivna.filter((patient) => {\n    const patientDatum = new Date(patient.datum);\n    return (\n      patientDatum >= new Date(periodStart) &&\n      patientDatum <= new Date(periodSlut)\n    );\n  }).length;\n\n  return (\n    <>\n      <p>totalt inlagda: {totalInskrivna}</p>\n      <p>angivet vårdtid: {antalDygn}</p>\n      <p>Tilldelats FVK: {antalFVKochDagar}</p>\n      <DatumFilter\n        historikInskrivna={historikInskrivna}\n        onFilter={handleFilter}\n      />\n    </>\n  );\n}\n\nexport default SidaSammanlagdStats;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAErC,OAAOC,WAAW,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,SAASC,mBAAmBA,CAAC;EAC3BC,QAAQ;EACRC,WAAW;EACXC,UAAU;EACVC,iBAAiB;EACjBC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMe,YAAY,GAAIC,iBAAiB,IAAK;IAC1CF,eAAe,CAACE,iBAAiB,CAAC;EACpC,CAAC;;EAED;EACA,MAAMC,cAAc,GAAGJ,YAAY,CAACK,MAAM;EAC1C;EACA,MAAMC,SAAS,GAAGN,YAAY,CAACO,MAAM,CAClCC,OAAO,IAAKA,OAAO,CAACC,IAAI,KAAK,EAChC,CAAC,CAACJ,MAAM;;EAER;EACA,MAAMK,gBAAgB,GAAGV,YAAY,CAACO,MAAM,CAAEC,OAAO,IAAK;IACxD,OACEA,OAAO,CAACG,GAAG,KAAK,EAAE,IAClBb,uBAAuB,CAACU,OAAO,CAACI,KAAK,EAAE,IAAIC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;EAE1D,CAAC,CAAC,CAACR,MAAM;EAET,MAAMS,cAAc,GAAGjB,iBAAiB,CAACU,MAAM,CAAEC,OAAO,IAAK;IAC3D,MAAMO,YAAY,GAAG,IAAIF,IAAI,CAACL,OAAO,CAACI,KAAK,CAAC;IAC5C,OACEG,YAAY,IAAI,IAAIF,IAAI,CAAClB,WAAW,CAAC,IACrCoB,YAAY,IAAI,IAAIF,IAAI,CAACjB,UAAU,CAAC;EAExC,CAAC,CAAC,CAACS,MAAM;EAET,oBACEf,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,GAAG,kBAAgB,EAACF,cAAc;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvC9B,OAAA;MAAA0B,QAAA,GAAG,sBAAiB,EAACV,SAAS;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnC9B,OAAA;MAAA0B,QAAA,GAAG,kBAAgB,EAACN,gBAAgB;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzC9B,OAAA,CAACF,WAAW;MACVS,iBAAiB,EAAEA,iBAAkB;MACrCH,QAAQ,EAAEQ;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA,eACF,CAAC;AAEP;AAACrB,EAAA,CA/CQN,mBAAmB;AAAA4B,EAAA,GAAnB5B,mBAAmB;AAiD5B,eAAeA,mBAAmB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}