{"ast":null,"code":"import\"../Formular/Form.css\";import Button from\"../UI/Button\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DatumFilter=function DatumFilter(_ref){var historikInskrivna=_ref.historikInskrivna,setPeriodStart=_ref.setPeriodStart,periodStart=_ref.periodStart,periodSlut=_ref.periodSlut,onFilter=_ref.onFilter,setPeriodSlut=_ref.setPeriodSlut;var handleFilter=function handleFilter(e){e.preventDefault();// Konvertera start- och slutdatum till JavaScript Date-objekt\nvar newStartDate=new Date(periodStart);var newEndDate=new Date(periodSlut);// Ta bort tidskomponenten för att jämföra enbart datum\nnewStartDate.setHours(0,0,0,0);newEndDate.setHours(0,0,0,0);// Filtrera resultaten och uppdatera filtrerad data i komponentens lokala tillstånd\nvar filtreradDatum=historikInskrivna.filter(function(patient){var patientDate=new Date(patient.datum);patientDate.setHours(0,0,0,0);console.log(\"patientDate:\",patientDate);console.log(\"startDate:\",newStartDate);console.log(\"endDate:\",newEndDate);var isWithinRange=patientDate>=newStartDate&&patientDate<=newEndDate;console.log(\"isWithinRange:\",isWithinRange);return isWithinRange;});onFilter(filtreradDatum);};return/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"kolumn\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Startdatum\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:periodStart,onChange:function onChange(e){return setPeriodStart(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"kolumn\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Slutdatum\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:periodSlut,onChange:function onChange(e){return setPeriodSlut(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{onClick:handleFilter,children:\"Filtrera datum\"})]})});};export default DatumFilter;","map":{"version":3,"names":["Button","jsx","_jsx","jsxs","_jsxs","DatumFilter","_ref","historikInskrivna","setPeriodStart","periodStart","periodSlut","onFilter","setPeriodSlut","handleFilter","e","preventDefault","newStartDate","Date","newEndDate","setHours","filtreradDatum","filter","patient","patientDate","datum","console","log","isWithinRange","children","className","type","value","onChange","target","onClick"],"sources":["/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/Datum/DatumFilter.jsx"],"sourcesContent":["import \"../Formular/Form.css\";\nimport Button from \"../UI/Button\";\n\nconst DatumFilter = ({\n  historikInskrivna,\n  setPeriodStart,\n  periodStart,\n  periodSlut,\n  onFilter,\n  setPeriodSlut,\n}) => {\n  const handleFilter = (e) => {\n    e.preventDefault();\n    // Konvertera start- och slutdatum till JavaScript Date-objekt\n    const newStartDate = new Date(periodStart);\n    const newEndDate = new Date(periodSlut);\n\n    // Ta bort tidskomponenten för att jämföra enbart datum\n    newStartDate.setHours(0, 0, 0, 0);\n    newEndDate.setHours(0, 0, 0, 0);\n\n    // Filtrera resultaten och uppdatera filtrerad data i komponentens lokala tillstånd\n    const filtreradDatum = historikInskrivna.filter((patient) => {\n      const patientDate = new Date(patient.datum);\n      patientDate.setHours(0, 0, 0, 0);\n\n      console.log(\"patientDate:\", patientDate);\n      console.log(\"startDate:\", newStartDate);\n      console.log(\"endDate:\", newEndDate);\n\n      const isWithinRange =\n        patientDate >= newStartDate && patientDate <= newEndDate;\n      console.log(\"isWithinRange:\", isWithinRange);\n\n      return isWithinRange;\n    });\n\n    onFilter(filtreradDatum);\n  };\n\n  return (\n    <form>\n      <div className=\"form-container\">\n        <div className=\"kolumn\">\n          <label>Startdatum</label>\n          <input\n            type=\"date\"\n            value={periodStart}\n            onChange={(e) => setPeriodStart(e.target.value)}\n          />\n        </div>\n        <div className=\"kolumn\">\n          <label>Slutdatum</label>\n          <input\n            type=\"date\"\n            value={periodSlut}\n            onChange={(e) => setPeriodSlut(e.target.value)}\n          />\n        </div>\n        <Button onClick={handleFilter}>Filtrera datum</Button>\n      </div>\n    </form>\n  );\n};\n\nexport default DatumFilter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}