{"ast":null,"code":"var _jsxFileName = \"/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\n\n// import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n// // import {faPencilAlt, faTrash} from \"@fortawesome/free-solid-svg-icons\";\n// import {faTrash} from \"@fortawesome/free-solid-svg-icons\";\nimport InneliggandePatienter from \"./Tabell/InneliggandePatienter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [patienter, setPatienter] = useState([{\n    id: 12345,\n    plats: \"101\",\n    datum: \"2023-09-30\",\n    fvk: \"LEB\"\n  }, {\n    id: 67890,\n    plats: \"111\",\n    datum: \"2023-10-10\",\n    fvk: \"MD\"\n  }]);\n  //  state för ny patient - start in = input\n  const [inPlats, setInPlats] = useState(\"\");\n  const [inDatum, setInDatum] = useState(\"\");\n  const [inKontakt, setInKontakt] = useState(\"\");\n\n  //  state för redigering\n  const [redigeradPatient, setRedigeradPatient] = useState(null);\n\n  //funktioner som ska vara i appen\n  const uniqueId = () => {\n    return new Date().getTime(); // Ersätt med din egen unika ID-genereringslogik\n  };\n\n  const handleSubmitNypatient = e => {\n    e.preventDefault();\n    const nyPatient = {\n      id: uniqueId(),\n      plats: inPlats,\n      datum: inDatum,\n      fvk: inKontakt\n    };\n    setPatienter(prevPatienter => [...prevPatienter, nyPatient]);\n    setInPlats(\"\");\n    setInDatum(\"\");\n    setInKontakt(\"\");\n  };\n  const startRedigering = patient => {\n    // kopiera patientobjekt\n    setRedigeradPatient({\n      ...patient\n    });\n  };\n  const sparaRedigering = () => {\n    if (redigeradPatient) {\n      setPatienter(prevPatienter => {\n        return prevPatienter.map(patient => {\n          return patient.id === redigeradPatient.id ? redigeradPatient : patient;\n        });\n      });\n      setRedigeradPatient(null);\n    }\n  };\n  const deletePatient = id => {\n    setPatienter(prevPatienter => {\n      return prevPatienter.filter(p => p.id !== id);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitNypatient,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"va-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inPlats,\n              onChange: e => setInPlats(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inKontakt,\n              onChange: e => setInKontakt(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ho-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: inDatum,\n              onChange: e => setInDatum(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Spara\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InneliggandePatienter, {\n      patienter: patienter,\n      redigeradPatient: redigeradPatient,\n      setRedigeradPatient: setRedigeradPatient,\n      sparaRedigering: sparaRedigering,\n      startRedigering: startRedigering,\n      deletePatient: deletePatient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5++xHT6QyWUCoSdZKlNpcGSllpU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","InneliggandePatienter","jsxDEV","_jsxDEV","App","_s","patienter","setPatienter","id","plats","datum","fvk","inPlats","setInPlats","inDatum","setInDatum","inKontakt","setInKontakt","redigeradPatient","setRedigeradPatient","uniqueId","Date","getTime","handleSubmitNypatient","e","preventDefault","nyPatient","prevPatienter","startRedigering","patient","sparaRedigering","map","deletePatient","filter","p","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/App.js"],"sourcesContent":["import {useState} from \"react\";\nimport \"./App.css\";\n\n// import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n// // import {faPencilAlt, faTrash} from \"@fortawesome/free-solid-svg-icons\";\n// import {faTrash} from \"@fortawesome/free-solid-svg-icons\";\nimport InneliggandePatienter from \"./Tabell/InneliggandePatienter\";\n\nfunction App() {\n  const [patienter, setPatienter] = useState([\n    {id: 12345, plats: \"101\", datum: \"2023-09-30\", fvk: \"LEB\"},\n    {id: 67890, plats: \"111\", datum: \"2023-10-10\", fvk: \"MD\"},\n  ]);\n  //  state för ny patient - start in = input\n  const [inPlats, setInPlats] = useState(\"\");\n  const [inDatum, setInDatum] = useState(\"\");\n  const [inKontakt, setInKontakt] = useState(\"\");\n\n  //  state för redigering\n  const [redigeradPatient, setRedigeradPatient] = useState(null);\n\n  //funktioner som ska vara i appen\n  const uniqueId = () => {\n    return new Date().getTime(); // Ersätt med din egen unika ID-genereringslogik\n  };\n\n  const handleSubmitNypatient = (e) => {\n    e.preventDefault();\n    const nyPatient = {\n      id: uniqueId(),\n      plats: inPlats,\n      datum: inDatum,\n      fvk: inKontakt,\n    };\n    setPatienter((prevPatienter) => [...prevPatienter, nyPatient]);\n    setInPlats(\"\");\n    setInDatum(\"\");\n    setInKontakt(\"\");\n  };\n\n  const startRedigering = (patient) => {\n    // kopiera patientobjekt\n    setRedigeradPatient({...patient});\n  };\n\n  const sparaRedigering = () => {\n    if (redigeradPatient) {\n      setPatienter((prevPatienter) => {\n        return prevPatienter.map((patient) => {\n          return patient.id === redigeradPatient.id\n            ? redigeradPatient\n            : patient;\n        });\n      });\n      setRedigeradPatient(null);\n    }\n  };\n\n  const deletePatient = (id) => {\n    setPatienter((prevPatienter) => {\n      return prevPatienter.filter((p) => p.id !== id);\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Teest</h1>\n      <br />\n\n      {/* ny patient form - start */}\n      <div className=\"card\">\n        <form onSubmit={handleSubmitNypatient}>\n          <div className=\"form-container\">\n            <div className=\"va-container\">\n              <input\n                type=\"text\"\n                value={inPlats}\n                onChange={(e) => setInPlats(e.target.value)}\n              />\n              <input\n                type=\"text\"\n                value={inKontakt}\n                onChange={(e) => setInKontakt(e.target.value)}\n              />\n              <input />\n            </div>\n            <div className=\"ho-container\">\n              <input\n                type=\"date\"\n                value={inDatum}\n                onChange={(e) => setInDatum(e.target.value)}\n              />\n              <input />\n              <input />\n            </div>\n          </div>\n          <div className=\"btn-container\">\n            <button type=\"submit\">Spara</button>\n          </div>\n        </form>\n      </div>\n\n      {/* tabell av patienter */}\n      <InneliggandePatienter\n        patienter={patienter}\n        redigeradPatient={redigeradPatient}\n        setRedigeradPatient={setRedigeradPatient}\n        sparaRedigering={sparaRedigering}\n        startRedigering={startRedigering}\n        deletePatient={deletePatient}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}