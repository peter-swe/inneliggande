{"ast":null,"code":"var _jsxFileName = \"/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/pages/SidaSammanlagdStats.jsx\";\nimport React, { useState } from \"react\";\nimport DatumFilter from \"../Datum/DatumFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SidaSammanlagdStats({\n  patienter,\n  historikInskrivna,\n  antaletDagarMellanDagar\n}) {\n  // const [filteredPatienter, setFilteredPatienter] = useState(patienter);\n\n  // const filterPatientsByDate = (startDate, endDate) => {\n  //   const filtered = historikInskrivna.filter((patient) => {\n  //     const patientDatum = new Date(patient.datum);\n  //     return (\n  //       patientDatum >= new Date(startDate) && patientDatum <= new Date(endDate)\n  //     );\n  //   });\n  //   setFilteredPatienter(filtered);\n  // };\n\n  const totalInskrivna = historikInskrivna.length;\n\n  // Räkna antalet patienter med angivet 'dygn'\n  const antalDygn = historikInskrivna.filter(patient => patient.dygn !== \"\").length;\n\n  // Räkna antalet patienter med FVK\n  const antalFVKochDagar = historikInskrivna.filter(patient => {\n    return patient.fvk !== \"\" && antaletDagarMellanDagar(patient.datum, new Date()) > 5;\n  }).length;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"totalt inlagda: \", totalInskrivna]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"angivet v\\xE5rdtid: \", antalDygn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tilldelats FVK: \", antalFVKochDagar]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatumFilter, {\n      onFilter: filterPatientsByDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = SidaSammanlagdStats;\nexport default SidaSammanlagdStats;\nvar _c;\n$RefreshReg$(_c, \"SidaSammanlagdStats\");","map":{"version":3,"names":["React","useState","DatumFilter","jsxDEV","_jsxDEV","Fragment","_Fragment","SidaSammanlagdStats","patienter","historikInskrivna","antaletDagarMellanDagar","totalInskrivna","length","antalDygn","filter","patient","dygn","antalFVKochDagar","fvk","datum","Date","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilter","filterPatientsByDate","_c","$RefreshReg$"],"sources":["/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/pages/SidaSammanlagdStats.jsx"],"sourcesContent":["import React, {useState} from \"react\";\n\nimport DatumFilter from \"../Datum/DatumFilter\";\n\nfunction SidaSammanlagdStats({\n  patienter,\n  historikInskrivna,\n  antaletDagarMellanDagar,\n}) {\n  // const [filteredPatienter, setFilteredPatienter] = useState(patienter);\n\n  // const filterPatientsByDate = (startDate, endDate) => {\n  //   const filtered = historikInskrivna.filter((patient) => {\n  //     const patientDatum = new Date(patient.datum);\n  //     return (\n  //       patientDatum >= new Date(startDate) && patientDatum <= new Date(endDate)\n  //     );\n  //   });\n  //   setFilteredPatienter(filtered);\n  // };\n\n  const totalInskrivna = historikInskrivna.length;\n\n  // Räkna antalet patienter med angivet 'dygn'\n  const antalDygn = historikInskrivna.filter(\n    (patient) => patient.dygn !== \"\"\n  ).length;\n\n  // Räkna antalet patienter med FVK\n  const antalFVKochDagar = historikInskrivna.filter((patient) => {\n    return (\n      patient.fvk !== \"\" &&\n      antaletDagarMellanDagar(patient.datum, new Date()) > 5\n    );\n  }).length;\n\n  return (\n    <>\n      <p>totalt inlagda: {totalInskrivna}</p>\n      <p>angivet vårdtid: {antalDygn}</p>\n      <p>Tilldelats FVK: {antalFVKochDagar}</p>\n      <DatumFilter onFilter={filterPatientsByDate} />\n    </>\n  );\n}\n\nexport default SidaSammanlagdStats;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAErC,OAAOC,WAAW,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,SAASC,mBAAmBA,CAAC;EAC3BC,SAAS;EACTC,iBAAiB;EACjBC;AACF,CAAC,EAAE;EACD;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,cAAc,GAAGF,iBAAiB,CAACG,MAAM;;EAE/C;EACA,MAAMC,SAAS,GAAGJ,iBAAiB,CAACK,MAAM,CACvCC,OAAO,IAAKA,OAAO,CAACC,IAAI,KAAK,EAChC,CAAC,CAACJ,MAAM;;EAER;EACA,MAAMK,gBAAgB,GAAGR,iBAAiB,CAACK,MAAM,CAAEC,OAAO,IAAK;IAC7D,OACEA,OAAO,CAACG,GAAG,KAAK,EAAE,IAClBR,uBAAuB,CAACK,OAAO,CAACI,KAAK,EAAE,IAAIC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;EAE1D,CAAC,CAAC,CAACR,MAAM;EAET,oBACER,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,GAAG,kBAAgB,EAACV,cAAc;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCrB,OAAA;MAAAiB,QAAA,GAAG,sBAAiB,EAACR,SAAS;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCrB,OAAA;MAAAiB,QAAA,GAAG,kBAAgB,EAACJ,gBAAgB;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzCrB,OAAA,CAACF,WAAW;MAACwB,QAAQ,EAAEC;IAAqB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC/C,CAAC;AAEP;AAACG,EAAA,GAxCQrB,mBAAmB;AA0C5B,eAAeA,mBAAmB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}