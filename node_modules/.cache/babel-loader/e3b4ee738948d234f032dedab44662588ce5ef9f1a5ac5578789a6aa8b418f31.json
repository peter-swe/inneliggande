{"ast":null,"code":"var _jsxFileName = \"/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/Statistik/FiltreradStatistik.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FiltreradStatistik({\n  patienter\n}) {\n  _s();\n  const [startDatum, setStartDatum] = useState(\"\");\n  const [slutDatum, setSlutDatum] = useState(\"\");\n  const [filtreradePatienter, setFiltreradePatienter] = useState([]);\n  const [totaltInlagda, setTotaltInlagda] = useState(0);\n  const [totaltFVK, setTotaltFVK] = useState(0);\n  const [totaltVardtid, setTotaltVardtid] = useState(0);\n  useEffect(() => {\n    // Filtrera patienter baserat på kriterierna\n    const startDate = new Date(startDatum);\n    const endDate = new Date(slutDatum);\n    const filteredPatients = patienter.filter(patient => {\n      const inDatum = new Date(patient.inDatum);\n      return inDatum >= startDate && inDatum <= endDate;\n    });\n    setFiltreradePatienter(filteredPatients);\n  }, [startDatum, slutDatum, patienter]);\n  useEffect(() => {\n    // Räkna det totala antalet inlagda patienter\n    setTotaltInlagda(filtreradePatienter.length);\n  }, [filtreradePatienter]);\n  useEffect(() => {\n    // Räkna det totala antalet patienter med FVK\n    const antalFVK = filtreradePatienter.filter(patient => patient.fvk !== \"\").length;\n    setTotaltFVK(antalFVK);\n  }, [filtreradePatienter]);\n  useEffect(() => {\n    // Räkna det totala antalet med vald vårdtid\n    const antalVardtid = filtreradePatienter.filter(patient => patient.vardtid !== \"\").length;\n    setTotaltVardtid(antalVardtid);\n  }, [filtreradePatienter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Filterad Statistik\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: startDatum,\n      onChange: e => setStartDatum(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: slutDatum,\n      onChange: e => setSlutDatum(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Totalt antal inlagda patienter: \", totaltInlagda]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Totalt antal patienter med FVK: \", totaltFVK]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Totalt antal med vald v\\xE5rdtid: \", totaltVardtid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filtreradePatienter.map(patient => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: patient.namn\n      }, patient.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(FiltreradStatistik, \"rC/TWPrEhQe3xuOLsi38L8MPU3M=\");\n_c = FiltreradStatistik;\nexport default FiltreradStatistik;\nvar _c;\n$RefreshReg$(_c, \"FiltreradStatistik\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","FiltreradStatistik","patienter","_s","startDatum","setStartDatum","slutDatum","setSlutDatum","filtreradePatienter","setFiltreradePatienter","totaltInlagda","setTotaltInlagda","totaltFVK","setTotaltFVK","totaltVardtid","setTotaltVardtid","startDate","Date","endDate","filteredPatients","filter","patient","inDatum","length","antalFVK","fvk","antalVardtid","vardtid","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","map","namn","id","_c","$RefreshReg$"],"sources":["/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/Statistik/FiltreradStatistik.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nfunction FiltreradStatistik({patienter}) {\n  const [startDatum, setStartDatum] = useState(\"\");\n  const [slutDatum, setSlutDatum] = useState(\"\");\n  const [filtreradePatienter, setFiltreradePatienter] = useState([]);\n\n  const [totaltInlagda, setTotaltInlagda] = useState(0);\n  const [totaltFVK, setTotaltFVK] = useState(0);\n  const [totaltVardtid, setTotaltVardtid] = useState(0);\n\n  useEffect(() => {\n    // Filtrera patienter baserat på kriterierna\n    const startDate = new Date(startDatum);\n    const endDate = new Date(slutDatum);\n    const filteredPatients = patienter.filter((patient) => {\n      const inDatum = new Date(patient.inDatum);\n      return inDatum >= startDate && inDatum <= endDate;\n    });\n\n    setFiltreradePatienter(filteredPatients);\n  }, [startDatum, slutDatum, patienter]);\n\n  useEffect(() => {\n    // Räkna det totala antalet inlagda patienter\n    setTotaltInlagda(filtreradePatienter.length);\n  }, [filtreradePatienter]);\n\n  useEffect(() => {\n    // Räkna det totala antalet patienter med FVK\n    const antalFVK = filtreradePatienter.filter(\n      (patient) => patient.fvk !== \"\"\n    ).length;\n    setTotaltFVK(antalFVK);\n  }, [filtreradePatienter]);\n\n  useEffect(() => {\n    // Räkna det totala antalet med vald vårdtid\n    const antalVardtid = filtreradePatienter.filter(\n      (patient) => patient.vardtid !== \"\"\n    ).length;\n    setTotaltVardtid(antalVardtid);\n  }, [filtreradePatienter]);\n\n  return (\n    <div>\n      <h1>Filterad Statistik</h1>\n      <input\n        type=\"date\"\n        value={startDatum}\n        onChange={(e) => setStartDatum(e.target.value)}\n      />\n      <input\n        type=\"date\"\n        value={slutDatum}\n        onChange={(e) => setSlutDatum(e.target.value)}\n      />\n\n      <p>Totalt antal inlagda patienter: {totaltInlagda}</p>\n      <p>Totalt antal patienter med FVK: {totaltFVK}</p>\n      <p>Totalt antal med vald vårdtid: {totaltVardtid}</p>\n\n      <ul>\n        {filtreradePatienter.map((patient) => (\n          <li key={patient.id}>{patient.namn}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default FiltreradStatistik;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}