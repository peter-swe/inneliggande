{"ast":null,"code":"var _jsxFileName = \"/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/Datum/DatumFilter.jsx\";\nimport \"../Formular/Form.css\";\n// import React, {useState} from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DatumFilter = ({\n  historikInskrivna,\n  setPeriodStart,\n  periodStart,\n  periodSlut,\n  onFilter,\n  setPeriodSlut\n}) => {\n  // const [periodStart, setPeriodStart] = useState(\"\");\n  // const [periodSlut, setPeriodSlut] = useState(\"\");\n\n  // const [startDate, setStartDate] = useState(new Date());\n  // const [endDate, setEndDate] = useState(new Date());\n\n  const handleFilter = e => {\n    e.preventDefault();\n    // Konvertera start- och slutdatum till JavaScript Date-objekt\n    const newStartDate = new Date(periodStart);\n    const newEndDate = new Date(periodSlut);\n\n    // Ta bort tidskomponenten för att jämföra enbart datum\n    newStartDate.setHours(0, 0, 0, 0);\n    newEndDate.setHours(0, 0, 0, 0);\n\n    // Filtrera resultaten och uppdatera filtrerad data i komponentens lokala tillstånd\n    const filtreradDatum = historikInskrivna.filter(patient => {\n      const patientDate = new Date(patient.datum);\n      patientDate.setHours(0, 0, 0, 0);\n      console.log(\"patientDate:\", patientDate);\n      console.log(\"startDate:\", newStartDate);\n      console.log(\"endDate:\", newEndDate);\n      const isWithinRange = patientDate >= newStartDate && patientDate <= newEndDate;\n      console.log(\"isWithinRange:\", isWithinRange);\n      return isWithinRange;\n    });\n    onFilter(filtreradDatum);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kolumn\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Startdatum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: periodStart,\n          onChange: e => setPeriodStart(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kolumn\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Slutdatum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: periodSlut,\n          onChange: e => setPeriodSlut(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFilter,\n        children: \"Filtrera datum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = DatumFilter;\nexport default DatumFilter;\nvar _c;\n$RefreshReg$(_c, \"DatumFilter\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","DatumFilter","historikInskrivna","setPeriodStart","periodStart","periodSlut","onFilter","setPeriodSlut","handleFilter","e","preventDefault","newStartDate","Date","newEndDate","setHours","filtreradDatum","filter","patient","patientDate","datum","console","log","isWithinRange","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/Datum/DatumFilter.jsx"],"sourcesContent":["import \"../Formular/Form.css\";\n// import React, {useState} from \"react\";\n\nconst DatumFilter = ({\n  historikInskrivna,\n  setPeriodStart,\n  periodStart,\n  periodSlut,\n  onFilter,\n  setPeriodSlut,\n}) => {\n  // const [periodStart, setPeriodStart] = useState(\"\");\n  // const [periodSlut, setPeriodSlut] = useState(\"\");\n\n  // const [startDate, setStartDate] = useState(new Date());\n  // const [endDate, setEndDate] = useState(new Date());\n\n  const handleFilter = (e) => {\n    e.preventDefault();\n    // Konvertera start- och slutdatum till JavaScript Date-objekt\n    const newStartDate = new Date(periodStart);\n    const newEndDate = new Date(periodSlut);\n\n    // Ta bort tidskomponenten för att jämföra enbart datum\n    newStartDate.setHours(0, 0, 0, 0);\n    newEndDate.setHours(0, 0, 0, 0);\n\n    // Filtrera resultaten och uppdatera filtrerad data i komponentens lokala tillstånd\n    const filtreradDatum = historikInskrivna.filter((patient) => {\n      const patientDate = new Date(patient.datum);\n      patientDate.setHours(0, 0, 0, 0);\n\n      console.log(\"patientDate:\", patientDate);\n      console.log(\"startDate:\", newStartDate);\n      console.log(\"endDate:\", newEndDate);\n\n      const isWithinRange =\n        patientDate >= newStartDate && patientDate <= newEndDate;\n      console.log(\"isWithinRange:\", isWithinRange);\n\n      return isWithinRange;\n    });\n\n    onFilter(filtreradDatum);\n  };\n\n  return (\n    <form>\n      <div className=\"form-container\">\n        <div className=\"kolumn\">\n          <label>Startdatum</label>\n          <input\n            type=\"date\"\n            value={periodStart}\n            onChange={(e) => setPeriodStart(e.target.value)}\n          />\n        </div>\n        <div className=\"kolumn\">\n          <label>Slutdatum</label>\n          <input\n            type=\"date\"\n            value={periodSlut}\n            onChange={(e) => setPeriodSlut(e.target.value)}\n          />\n        </div>\n        <button onClick={handleFilter}>Filtrera datum</button>\n      </div>\n    </form>\n  );\n};\n\nexport default DatumFilter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}