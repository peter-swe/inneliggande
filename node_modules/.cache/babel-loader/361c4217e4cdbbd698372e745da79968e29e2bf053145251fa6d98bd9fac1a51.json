{"ast":null,"code":"var _jsxFileName = \"/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/pages/SidaSammanlagdStats.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DatumFilter from \"../Datum/DatumFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SidaSammanlagdStats({\n  historikInskrivna,\n  antaletDagarMellanDagar,\n  filteredData,\n  setFilteredData\n}) {\n  _s();\n  const [showFiltreradStatistik, setShowFiltreradStatistik] = useState(false);\n  const handleFilter = nyaFiltreradeData => {\n    setFilteredData(nyaFiltreradeData);\n    setShowFiltreradStatistik(true); // Visa FiltreradStatistik när filtreringen är klar\n  };\n\n  // Använd filteredData för att utföra beräkningar eller visa information baserat på det.\n  const antalPatienter = filteredData.length;\n  // Räkna antalet patienter med angivet 'dygn'\n  const antalDygn = filteredData.filter(patient => patient.dygn !== \"\").length;\n\n  // Räkna antalet patienter med FVK\n  const antalFVKochDagar = filteredData.filter(patient => {\n    return patient.fvk !== \"\" && antaletDagarMellanDagar(patient.datum, new Date()) > 5;\n  }).length;\n\n  // const totalInskrivna = historikInskrivna.filter((patient) => {\n  //   const patientDatum = new Date(patient.datum);\n  //   return (\n  //     patientDatum >= new Date(periodStart) &&\n  //     patientDatum <= new Date(periodSlut)\n  //   );\n  // }).length;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"totalt inlagda: \", antalPatienter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"angivet v\\xE5rdtid: \", antalDygn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tilldelats FVK: \", antalFVKochDagar]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatumFilter, {\n      historikInskrivna: historikInskrivna,\n      onFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SidaSammanlagdStats, \"oL9wV+vcb8oJYXRvOW4rZwwRTKY=\");\n_c = SidaSammanlagdStats;\nexport default SidaSammanlagdStats;\nvar _c;\n$RefreshReg$(_c, \"SidaSammanlagdStats\");","map":{"version":3,"names":["React","useState","DatumFilter","jsxDEV","_jsxDEV","Fragment","_Fragment","SidaSammanlagdStats","historikInskrivna","antaletDagarMellanDagar","filteredData","setFilteredData","_s","showFiltreradStatistik","setShowFiltreradStatistik","handleFilter","nyaFiltreradeData","antalPatienter","length","antalDygn","filter","patient","dygn","antalFVKochDagar","fvk","datum","Date","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilter","_c","$RefreshReg$"],"sources":["/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/pages/SidaSammanlagdStats.jsx"],"sourcesContent":["import React, {useState} from \"react\";\n\nimport DatumFilter from \"../Datum/DatumFilter\";\n\nfunction SidaSammanlagdStats({\n  historikInskrivna,\n  antaletDagarMellanDagar,\n  filteredData,\n  setFilteredData,\n}) {\n  const [showFiltreradStatistik, setShowFiltreradStatistik] = useState(false);\n\n  const handleFilter = (nyaFiltreradeData) => {\n    setFilteredData(nyaFiltreradeData);\n    setShowFiltreradStatistik(true); // Visa FiltreradStatistik när filtreringen är klar\n  };\n\n  // Använd filteredData för att utföra beräkningar eller visa information baserat på det.\n  const antalPatienter = filteredData.length;\n  // Räkna antalet patienter med angivet 'dygn'\n  const antalDygn = filteredData.filter(\n    (patient) => patient.dygn !== \"\"\n  ).length;\n\n  // Räkna antalet patienter med FVK\n  const antalFVKochDagar = filteredData.filter((patient) => {\n    return (\n      patient.fvk !== \"\" &&\n      antaletDagarMellanDagar(patient.datum, new Date()) > 5\n    );\n  }).length;\n\n  // const totalInskrivna = historikInskrivna.filter((patient) => {\n  //   const patientDatum = new Date(patient.datum);\n  //   return (\n  //     patientDatum >= new Date(periodStart) &&\n  //     patientDatum <= new Date(periodSlut)\n  //   );\n  // }).length;\n\n  return (\n    <>\n      <p>totalt inlagda: {antalPatienter}</p>\n      <p>angivet vårdtid: {antalDygn}</p>\n      <p>Tilldelats FVK: {antalFVKochDagar}</p>\n      <DatumFilter\n        historikInskrivna={historikInskrivna}\n        onFilter={handleFilter}\n      />\n    </>\n  );\n}\n\nexport default SidaSammanlagdStats;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAErC,OAAOC,WAAW,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,SAASC,mBAAmBA,CAAC;EAC3BC,iBAAiB;EACjBC,uBAAuB;EACvBC,YAAY;EACZC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM,CAACC,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE3E,MAAMc,YAAY,GAAIC,iBAAiB,IAAK;IAC1CL,eAAe,CAACK,iBAAiB,CAAC;IAClCF,yBAAyB,CAAC,IAAI,CAAC,CAAC,CAAC;EACnC,CAAC;;EAED;EACA,MAAMG,cAAc,GAAGP,YAAY,CAACQ,MAAM;EAC1C;EACA,MAAMC,SAAS,GAAGT,YAAY,CAACU,MAAM,CAClCC,OAAO,IAAKA,OAAO,CAACC,IAAI,KAAK,EAChC,CAAC,CAACJ,MAAM;;EAER;EACA,MAAMK,gBAAgB,GAAGb,YAAY,CAACU,MAAM,CAAEC,OAAO,IAAK;IACxD,OACEA,OAAO,CAACG,GAAG,KAAK,EAAE,IAClBf,uBAAuB,CAACY,OAAO,CAACI,KAAK,EAAE,IAAIC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;EAE1D,CAAC,CAAC,CAACR,MAAM;;EAET;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEd,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,GAAG,kBAAgB,EAACV,cAAc;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvC3B,OAAA;MAAAuB,QAAA,GAAG,sBAAiB,EAACR,SAAS;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnC3B,OAAA;MAAAuB,QAAA,GAAG,kBAAgB,EAACJ,gBAAgB;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzC3B,OAAA,CAACF,WAAW;MACVM,iBAAiB,EAAEA,iBAAkB;MACrCwB,QAAQ,EAAEjB;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA,eACF,CAAC;AAEP;AAACnB,EAAA,CA/CQL,mBAAmB;AAAA0B,EAAA,GAAnB1B,mBAAmB;AAiD5B,eAAeA,mBAAmB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}