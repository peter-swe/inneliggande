{"ast":null,"code":"import _slicedToArray from\"/Users/peterlelkes/Desktop/biva-patienter/patient-list/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import DatumFilter from\"../Datum/DatumFilter\";import FiltreradStatistik from\"../Statistik/FiltreradStatistik\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function SidaSammanlagdStats(_ref){var historikInskrivna=_ref.historikInskrivna,antaletDagarMellanDagar=_ref.antaletDagarMellanDagar,filteredData=_ref.filteredData,setFilteredData=_ref.setFilteredData;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showFiltreradStatistik=_useState2[0],setShowFiltreradStatistik=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),periodStart=_useState4[0],setPeriodStart=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),periodSlut=_useState6[0],setPeriodSlut=_useState6[1];var handleFilter=function handleFilter(nyaFiltreradeData){setFilteredData(nyaFiltreradeData);setShowFiltreradStatistik(true);// Visa FiltreradStatistik när filtreringen är klar\n};function newFilterHandler(){setShowFiltreradStatistik(false);}// Använd filteredData för att utföra beräkningar eller visa information baserat på det.\nvar antalPatienter=filteredData.length;// Räkna antalet patienter med angivet 'dygn'\nvar antalDygn=filteredData.filter(function(patient){return patient.dygn!==\"\";}).length;var procentDygn=Math.round(antalDygn*100/antalPatienter);// Räkna antalet patienter med FVK\nvar antalFVKochDagar=filteredData.filter(function(patient){return patient.fvk!==\"\"&&antaletDagarMellanDagar(patient.datum,new Date())>5;}).length;// Beräkna antalet patienter som uppfyller villkoret för antalet dagar\nvar eligibleFVK=filteredData.filter(function(patient){return antaletDagarMellanDagar(patient.datum,new Date())>5;}).length;// Beräkna procentandelen och runda av till närmaste heltal\nvar procentFVK=Math.round(antalFVKochDagar*100/eligibleFVK);return/*#__PURE__*/_jsx(_Fragment,{children:showFiltreradStatistik?/*#__PURE__*/ // Visa FiltreradStatistik om showFiltreradStatistik är true\n_jsx(FiltreradStatistik,{antalPatienter:antalPatienter,antalDygn:antalDygn,antalFVKochDagar:antalFVKochDagar,newFilterHandler:newFilterHandler,periodStart:periodStart// Skicka periodStart som prop till FiltreradStatistik\n,periodSlut:periodSlut// Skicka periodSlut som prop till FiltreradStatistik\n,procentFVK:procentFVK,procentDygn:procentDygn}):/*#__PURE__*/ // Visa DatumFilter om showFiltreradStatistik är false\n_jsx(DatumFilter,{historikInskrivna:historikInskrivna,onFilter:handleFilter,periodStart:periodStart// Skicka periodStart som prop till DatumFilter\n,periodSlut:periodSlut// Skicka periodSlut som prop till DatumFilter\n,setPeriodStart:setPeriodStart,setPeriodSlut:setPeriodSlut})});}export default SidaSammanlagdStats;","map":{"version":3,"names":["React","useState","DatumFilter","FiltreradStatistik","jsx","_jsx","Fragment","_Fragment","SidaSammanlagdStats","_ref","historikInskrivna","antaletDagarMellanDagar","filteredData","setFilteredData","_useState","_useState2","_slicedToArray","showFiltreradStatistik","setShowFiltreradStatistik","_useState3","_useState4","periodStart","setPeriodStart","_useState5","_useState6","periodSlut","setPeriodSlut","handleFilter","nyaFiltreradeData","newFilterHandler","antalPatienter","length","antalDygn","filter","patient","dygn","procentDygn","Math","round","antalFVKochDagar","fvk","datum","Date","eligibleFVK","procentFVK","children","onFilter"],"sources":["/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/pages/SidaSammanlagdStats.jsx"],"sourcesContent":["import React, {useState} from \"react\";\n\nimport DatumFilter from \"../Datum/DatumFilter\";\nimport FiltreradStatistik from \"../Statistik/FiltreradStatistik\";\n\nfunction SidaSammanlagdStats({\n  historikInskrivna,\n  antaletDagarMellanDagar,\n  filteredData,\n  setFilteredData,\n}) {\n  const [showFiltreradStatistik, setShowFiltreradStatistik] = useState(false);\n  const [periodStart, setPeriodStart] = useState(\"\");\n  const [periodSlut, setPeriodSlut] = useState(\"\");\n\n  const handleFilter = (nyaFiltreradeData) => {\n    setFilteredData(nyaFiltreradeData);\n    setShowFiltreradStatistik(true); // Visa FiltreradStatistik när filtreringen är klar\n  };\n\n  function newFilterHandler() {\n    setShowFiltreradStatistik(false);\n  }\n  // Använd filteredData för att utföra beräkningar eller visa information baserat på det.\n  const antalPatienter = filteredData.length;\n  // Räkna antalet patienter med angivet 'dygn'\n  const antalDygn = filteredData.filter(\n    (patient) => patient.dygn !== \"\"\n  ).length;\n\n  const procentDygn = Math.round((antalDygn * 100) / antalPatienter);\n\n  // Räkna antalet patienter med FVK\n  const antalFVKochDagar = filteredData.filter((patient) => {\n    return (\n      patient.fvk !== \"\" &&\n      antaletDagarMellanDagar(patient.datum, new Date()) > 5\n    );\n  }).length;\n\n  // Beräkna antalet patienter som uppfyller villkoret för antalet dagar\n  const eligibleFVK = filteredData.filter((patient) => {\n    return antaletDagarMellanDagar(patient.datum, new Date()) > 5;\n  }).length;\n\n  // Beräkna procentandelen och runda av till närmaste heltal\n  const procentFVK = Math.round((antalFVKochDagar * 100) / eligibleFVK);\n  return (\n    <>\n      {showFiltreradStatistik ? ( // Visa FiltreradStatistik om showFiltreradStatistik är true\n        <FiltreradStatistik\n          antalPatienter={antalPatienter}\n          antalDygn={antalDygn}\n          antalFVKochDagar={antalFVKochDagar}\n          newFilterHandler={newFilterHandler}\n          periodStart={periodStart} // Skicka periodStart som prop till FiltreradStatistik\n          periodSlut={periodSlut} // Skicka periodSlut som prop till FiltreradStatistik\n          procentFVK={procentFVK}\n          procentDygn={procentDygn}\n        />\n      ) : (\n        // Visa DatumFilter om showFiltreradStatistik är false\n        <DatumFilter\n          historikInskrivna={historikInskrivna}\n          onFilter={handleFilter}\n          periodStart={periodStart} // Skicka periodStart som prop till DatumFilter\n          periodSlut={periodSlut} // Skicka periodSlut som prop till DatumFilter\n          setPeriodStart={setPeriodStart}\n          setPeriodSlut={setPeriodSlut}\n        />\n      )}\n    </>\n  );\n}\n\nexport default SidaSammanlagdStats;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}