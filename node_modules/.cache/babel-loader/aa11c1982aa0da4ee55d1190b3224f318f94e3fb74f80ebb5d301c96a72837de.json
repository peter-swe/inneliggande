{"ast":null,"code":"var _jsxFileName = \"/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/Statistik/FiltreradStatistik.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FiltreradStatistik({\n  patienter\n}) {\n  _s();\n  const [startDatum, setStartDatum] = useState(\"\");\n  const [slutDatum, setSlutDatum] = useState(\"\");\n  const [totaltInlagda, setTotaltInlagda] = useState(0);\n  const [totaltFVK, setTotaltFVK] = useState(0);\n  const [totaltVardtid, setTotaltVardtid] = useState(0);\n  const [filtreradePatienter, setFiltreradePatienter] = useState([]);\n  useEffect(() => {\n    // Räkna det totala antalet inlagda patienter\n    setTotaltInlagda(filtreradePatienter.length);\n\n    // Räkna det totala antalet patienter med FVK\n    const antalFVK = filtreradePatienter.filter(patient => patient.fvk !== \"\").length;\n    setTotaltFVK(antalFVK);\n\n    // Räkna det totala antalet med vald vårdtid\n    const antalVardtid = filtreradePatienter.filter(patient => patient.vardtid !== \"\").length;\n    setTotaltVardtid(antalVardtid);\n  }, [filtreradePatienter]);\n  const handleFilter = () => {\n    const startDate = new Date(startDatum);\n    const endDate = new Date(slutDatum);\n\n    // Filtrera patienter baserat på kriterierna\n    const filteredPatients = patienter.filter(patient => {\n      const inDatum = new Date(patient.inDatum);\n      return inDatum >= startDate && inDatum <= endDate;\n    });\n    setFiltreradePatienter(filteredPatients);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Filterad Statistik\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: startDatum,\n      onChange: e => setStartDatum(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: slutDatum,\n      onChange: e => setSlutDatum(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFilter,\n      children: \"Filtrera\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Totalt antal inlagda patienter: \", totaltInlagda]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Totalt antal patienter med FVK: \", totaltFVK]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Totalt antal med vald v\\xE5rdtid: \", totaltVardtid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(FiltreradStatistik, \"MSqCynBsBNo49FAGnGUE0nhHw7I=\");\n_c = FiltreradStatistik;\nexport default FiltreradStatistik;\nvar _c;\n$RefreshReg$(_c, \"FiltreradStatistik\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","FiltreradStatistik","patienter","_s","startDatum","setStartDatum","slutDatum","setSlutDatum","totaltInlagda","setTotaltInlagda","totaltFVK","setTotaltFVK","totaltVardtid","setTotaltVardtid","filtreradePatienter","setFiltreradePatienter","length","antalFVK","filter","patient","fvk","antalVardtid","vardtid","handleFilter","startDate","Date","endDate","filteredPatients","inDatum","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/Statistik/FiltreradStatistik.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nfunction FiltreradStatistik({patienter}) {\n  const [startDatum, setStartDatum] = useState(\"\");\n  const [slutDatum, setSlutDatum] = useState(\"\");\n  const [totaltInlagda, setTotaltInlagda] = useState(0);\n  const [totaltFVK, setTotaltFVK] = useState(0);\n  const [totaltVardtid, setTotaltVardtid] = useState(0);\n  const [filtreradePatienter, setFiltreradePatienter] = useState([]);\n\n  useEffect(() => {\n    // Räkna det totala antalet inlagda patienter\n    setTotaltInlagda(filtreradePatienter.length);\n\n    // Räkna det totala antalet patienter med FVK\n    const antalFVK = filtreradePatienter.filter(\n      (patient) => patient.fvk !== \"\"\n    ).length;\n    setTotaltFVK(antalFVK);\n\n    // Räkna det totala antalet med vald vårdtid\n    const antalVardtid = filtreradePatienter.filter(\n      (patient) => patient.vardtid !== \"\"\n    ).length;\n    setTotaltVardtid(antalVardtid);\n  }, [filtreradePatienter]);\n\n  const handleFilter = () => {\n    const startDate = new Date(startDatum);\n    const endDate = new Date(slutDatum);\n\n    // Filtrera patienter baserat på kriterierna\n    const filteredPatients = patienter.filter((patient) => {\n      const inDatum = new Date(patient.inDatum);\n      return inDatum >= startDate && inDatum <= endDate;\n    });\n\n    setFiltreradePatienter(filteredPatients);\n  };\n\n  return (\n    <div>\n      <h1>Filterad Statistik</h1>\n      <input\n        type=\"date\"\n        value={startDatum}\n        onChange={(e) => setStartDatum(e.target.value)}\n      />\n      <input\n        type=\"date\"\n        value={slutDatum}\n        onChange={(e) => setSlutDatum(e.target.value)}\n      />\n      <button onClick={handleFilter}>Filtrera</button>\n\n      <p>Totalt antal inlagda patienter: {totaltInlagda}</p>\n      <p>Totalt antal patienter med FVK: {totaltFVK}</p>\n      <p>Totalt antal med vald vårdtid: {totaltVardtid}</p>\n\n      {/* <ul>\n        {filtreradePatienter.map((patient) => (\n          <li key={patient.id}>{patient.namn}</li>\n        ))}\n      </ul> */}\n    </div>\n  );\n}\n\nexport default FiltreradStatistik;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}