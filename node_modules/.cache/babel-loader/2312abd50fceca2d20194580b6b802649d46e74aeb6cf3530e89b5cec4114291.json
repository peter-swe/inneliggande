{"ast":null,"code":"var _jsxFileName = \"/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\n\n// import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n// // import {faPencilAlt, faTrash} from \"@fortawesome/free-solid-svg-icons\";\n// import {faTrash} from \"@fortawesome/free-solid-svg-icons\";\nimport PatienterTabell from \"./Tabell/PatienterTabell\";\nimport Navbar from \"./navigering/Navbar\";\nimport { Route, Routes } from \"react-router-dom\";\nimport SidaAktuellStats from \"./pages/SidaAktuellStats\";\nimport SidaSammanlagdStats from \"./pages/SidaSammanlagdStats\";\nimport SidaInneliggandePatienter from \"./pages/SidaInneliggandePatienter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [patienter, setPatienter] = useState([]);\n  //  state för ny patient - start in = input\n  const [inPlats, setInPlats] = useState(\"\");\n  const [inDatum, setInDatum] = useState(\"\");\n  const [inKontakt, setInKontakt] = useState(\"\");\n  const [initialer, setInitialer] = useState(\"\");\n  const [valdAvd, setValdAvd] = useState(\"\");\n  const [valdDygn, setValdDygn] = useState(\"\");\n\n  //  state för redigering\n  const [redigeradPatient, setRedigeradPatient] = useState(null);\n\n  //visa formulär\n  const [visaForm, setVisaForm] = useState(false);\n\n  //funktioner som ska vara i appen\n  const uniqueId = () => {\n    return new Date().getTime();\n  };\n  const handleSubmitNypatient = e => {\n    e.preventDefault();\n    const nyPatient = {\n      id: uniqueId(),\n      plats: inPlats,\n      datum: inDatum,\n      fvk: inKontakt,\n      initialer: initialer,\n      avd: valdAvd,\n      dygn: valdDygn\n    };\n    setPatienter(prevPatienter => [...prevPatienter, nyPatient]);\n    setInPlats(\"\");\n    setInDatum(\"\");\n    setInKontakt(\"\");\n    setInitialer(\"\");\n    setValdAvd(\"\");\n    setValdDygn(\"\");\n    setVisaForm(false);\n  };\n  const startRedigering = patient => {\n    // kopiera patientobjekt\n    setRedigeradPatient({\n      ...patient\n    });\n  };\n  const sparaRedigering = () => {\n    if (redigeradPatient) {\n      setPatienter(prevPatienter => {\n        return prevPatienter.map(patient => {\n          return patient.id === redigeradPatient.id ? redigeradPatient : patient;\n        });\n      });\n      setRedigeradPatient(null);\n    }\n  };\n  const deletePatient = id => {\n    setPatienter(prevPatienter => {\n      return prevPatienter.filter(p => p.id !== id);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(SidaInneliggandePatienter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/statistik\",\n        element: /*#__PURE__*/_jsxDEV(SidaAktuellStats, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sammanlagd\",\n        element: /*#__PURE__*/_jsxDEV(SidaSammanlagdStats, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"w2bsfpf18W1iGRyv33Z3C9kKpS0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","PatienterTabell","Navbar","Route","Routes","SidaAktuellStats","SidaSammanlagdStats","SidaInneliggandePatienter","jsxDEV","_jsxDEV","App","_s","patienter","setPatienter","inPlats","setInPlats","inDatum","setInDatum","inKontakt","setInKontakt","initialer","setInitialer","valdAvd","setValdAvd","valdDygn","setValdDygn","redigeradPatient","setRedigeradPatient","visaForm","setVisaForm","uniqueId","Date","getTime","handleSubmitNypatient","e","preventDefault","nyPatient","id","plats","datum","fvk","avd","dygn","prevPatienter","startRedigering","patient","sparaRedigering","map","deletePatient","filter","p","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/peterlelkes/Desktop/biva-patienter/patient-list/src/App.js"],"sourcesContent":["import {useState} from \"react\";\nimport \"./App.css\";\n\n// import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n// // import {faPencilAlt, faTrash} from \"@fortawesome/free-solid-svg-icons\";\n// import {faTrash} from \"@fortawesome/free-solid-svg-icons\";\nimport PatienterTabell from \"./Tabell/PatienterTabell\";\n\nimport Navbar from \"./navigering/Navbar\";\nimport {Route, Routes} from \"react-router-dom\";\nimport SidaAktuellStats from \"./pages/SidaAktuellStats\";\nimport SidaSammanlagdStats from \"./pages/SidaSammanlagdStats\";\nimport SidaInneliggandePatienter from \"./pages/SidaInneliggandePatienter\";\n\nfunction App() {\n  const [patienter, setPatienter] = useState([]);\n  //  state för ny patient - start in = input\n  const [inPlats, setInPlats] = useState(\"\");\n  const [inDatum, setInDatum] = useState(\"\");\n  const [inKontakt, setInKontakt] = useState(\"\");\n  const [initialer, setInitialer] = useState(\"\");\n  const [valdAvd, setValdAvd] = useState(\"\");\n  const [valdDygn, setValdDygn] = useState(\"\");\n\n  //  state för redigering\n  const [redigeradPatient, setRedigeradPatient] = useState(null);\n\n  //visa formulär\n  const [visaForm, setVisaForm] = useState(false);\n\n  //funktioner som ska vara i appen\n  const uniqueId = () => {\n    return new Date().getTime();\n  };\n\n  const handleSubmitNypatient = (e) => {\n    e.preventDefault();\n    const nyPatient = {\n      id: uniqueId(),\n      plats: inPlats,\n      datum: inDatum,\n      fvk: inKontakt,\n      initialer: initialer,\n      avd: valdAvd,\n      dygn: valdDygn,\n    };\n    setPatienter((prevPatienter) => [...prevPatienter, nyPatient]);\n    setInPlats(\"\");\n    setInDatum(\"\");\n    setInKontakt(\"\");\n    setInitialer(\"\");\n    setValdAvd(\"\");\n    setValdDygn(\"\");\n    setVisaForm(false);\n  };\n\n  const startRedigering = (patient) => {\n    // kopiera patientobjekt\n    setRedigeradPatient({...patient});\n  };\n\n  const sparaRedigering = () => {\n    if (redigeradPatient) {\n      setPatienter((prevPatienter) => {\n        return prevPatienter.map((patient) => {\n          return patient.id === redigeradPatient.id\n            ? redigeradPatient\n            : patient;\n        });\n      });\n      setRedigeradPatient(null);\n    }\n  };\n\n  const deletePatient = (id) => {\n    setPatienter((prevPatienter) => {\n      return prevPatienter.filter((p) => p.id !== id);\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Routes>\n        <Route path=\"/\" element={<SidaInneliggandePatienter />} />\n        <Route path=\"/statistik\" element={<SidaAktuellStats />} />\n        <Route path=\"/sammanlagd\" element={<SidaSammanlagdStats />} />\n      </Routes>\n      <br />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}